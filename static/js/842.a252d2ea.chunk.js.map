{"version":3,"file":"static/js/842.a252d2ea.chunk.js","mappings":"mTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAChB,oBAAqB,CACxBE,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IACRC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IARiB,cACzBC,EADyB,yBASxBA,GATwB,2CAAH,qDAYjBC,EAAe,SAAAC,GAC1B,OAAOd,EAAAA,EAAAA,IAAA,iBACUc,GAAW,CACxBZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,IACZ,GACJ,EAEYU,EAAO,mCAAG,WAAMF,GAAN,uFACEd,EAAAA,EAAAA,IAAA,iBACNc,EADM,YACa,CAChCZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKW,IACjB,IACAV,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAXO,cACfC,EADe,yBAYdA,GAZc,2CAAH,sDAePM,EAAU,mCAAG,WAAMJ,GAAN,uFACDd,EAAAA,EAAAA,IAAA,iBACNc,EADM,YACa,CAChCZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKa,OACjB,IACAZ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAXU,cAClBC,EADkB,yBAYjBA,GAZiB,2CAAH,sDAeVQ,EAAiB,SAAAC,GAC5B,OAAOrB,EAAAA,EAAAA,IAAA,gBACiB,CACpBE,OAAQ,CACNC,QAASJ,EACTuB,MAAOD,EACPN,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,IACZ,GACJ,C,mGCrEKiB,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sHAmBhB,EAVkB,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC9B,OACE,yBACE,SAACL,EAAD,CAAYM,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMH,GAAhD,UACE,uBAAIF,OAIX,EClBc,SAASM,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,OAAQL,EAAY,EAAZA,SAC3C,OACE,wBACGK,GACCA,EAAOC,KAAI,gBAAGP,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAOL,EAAd,EAAcA,KAAd,OACT,SAAC,EAAD,CAEEK,MAAOA,GAAgBL,EACvBM,GAAIA,EACJC,SAAUA,GAHLD,EAFE,KAUlB,C,sECdYQ,E,QAAUX,GAAAA,QAAH,yC,qHCAPY,EAAaZ,EAAAA,GAAAA,KAAH,kEAKVa,EAASb,EAAAA,GAAAA,OAAH,2KASNc,EAAQd,EAAAA,GAAAA,MAAH,8E,SCDlB,EAba,SAAC,GAAkB,IAAhBe,EAAe,EAAfA,SAKd,OACE,UAACH,EAAD,CAAYG,SALO,SAAAC,GACnBA,EAAEC,iBACFF,EAASC,EAAEE,OAAOC,KAAKC,MACxB,EAEC,WACE,SAACN,EAAD,CAAOO,KAAK,OAAOxB,KAAK,UACxB,SAACgB,EAAD,uBAGL,E,+ECHc,SAASS,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEMjC,EAAQ0B,EAAaQ,IAAI,SACzB5B,GAAW6B,EAAAA,EAAAA,MAoBjB,OAdAC,EAAAA,EAAAA,YAAU,WACHpC,IACLiC,GAAW,IACXnC,EAAAA,EAAAA,IAAeE,GACZlB,MAAK,YAAkB,IAAfe,EAAc,EAAdA,QACHA,EAAQwC,OAAS,GACnBR,EAAUhC,GACVkC,GAAS,IACJA,GAAS,EACjB,IACA9C,OAAM,SAAAqD,GAAG,OAAInD,QAAQC,IAAIkD,EAAhB,IACTC,SAAQ,kBAAMN,GAAW,EAAjB,IACZ,GAAE,CAACjC,KAGF,UAAC,IAAD,YACE,SAAC,EAAD,CAAMiB,SApBO,SAAAjB,GACf2B,EAAgB,CAAE3B,MAAOA,GAC1B,IAmBIgC,IACC,gBACEQ,MAAO,CAAEC,UAAW,GAAIC,QAAS,OAAQC,eAAgB,UAD3D,UAGE,SAAC,IAAD,CAAYC,MAAM,UAAUC,KAAM,OAGpCf,GAGA,gBAAKU,MAAO,CAAEE,QAAS,OAAQC,eAAgB,UAA/C,UACE,oCACQ,SAAC,MAAD,IADR,0CAHF,SAACjC,EAAA,EAAD,CAAYC,OAAQA,EAAQL,SAAUA,MAU7C,C","sources":["api.js","components/MoviesList/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a19b19d31f769a9a934606f8f3dc5bbb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios\n    .get('/trending/all/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data)\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getMovieById = movieId => {\n  return axios\n    .get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data;\n    });\n};\n\nexport const getCast = async movieId => {\n  const response = await axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data.cast;\n    })\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios\n    .get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data.results;\n    })\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getMovieByName = name => {\n  return axios\n    .get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: name,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data;\n    });\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: #ff0066;\n  }\n`;\n\nconst MovieItem = ({ title, id, location }) => {\n  return (\n    <li>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <p>{title}</p>\n      </StyledLink>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","import MovieItem from './MovieItem';\n\nexport default function MoviesList({ movies, location }) {\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ id, title, name }) => (\n          <MovieItem\n            key={id}\n            title={title ? title : name}\n            id={id}\n            location={location}\n          />\n        ))}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  background-color: lightgray;\n  border-radius: 0 4px 4px 0;\n  border-color: transparent;\n  height: 45px;\n  width: 100px;\n  font-size: 24px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  height: 40px;\n  font-size: 24px;\n`;\n","import { FormStyled, Button, Input } from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.text.value);\n  };\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"text\" />\n      <Button>Search</Button>\n    </FormStyled>\n  );\n};\n\nexport default Form;\n","import { Section } from '../components/Section/Section.styled';\nimport Form from '../components/Form/Form';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieByName } from '../api';\nimport { BsFillEmojiDizzyFill } from 'react-icons/bs';\nimport SyncLoader from 'react-spinners/SyncLoader';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [empty, setEmpty] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const onSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    setLoading(true);\n    getMovieByName(query)\n      .then(({ results }) => {\n        if (results.length > 0) {\n          setMovies(results);\n          setEmpty(false);\n        } else setEmpty(true);\n      })\n      .catch(err => console.log(err))\n      .finally(() => setLoading(false));\n  }, [query]);\n\n  return (\n    <Section>\n      <Form onSubmit={onSubmit} />\n      {loading && (\n        <div\n          style={{ marginTop: 30, display: 'flex', justifyContent: 'center' }}\n        >\n          <SyncLoader color=\"#ff0066\" size={25} />\n        </div>\n      )}\n      {!empty ? (\n        <MoviesList movies={movies} location={location} />\n      ) : (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <h2>\n            Oops! <BsFillEmojiDizzyFill /> Please enter another movie name.\n          </h2>\n        </div>\n      )}\n    </Section>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovies","params","api_key","then","res","data","catch","error","console","log","message","response","getMovieById","movieId","language","getCast","cast","getReviews","results","getMovieByName","name","query","StyledLink","styled","NavLink","title","id","location","to","state","from","MoviesList","movies","map","Section","FormStyled","Button","Input","onSubmit","e","preventDefault","target","text","value","type","Movies","useSearchParams","searchParams","setSearchParams","useState","setMovies","empty","setEmpty","loading","setLoading","get","useLocation","useEffect","length","err","finally","style","marginTop","display","justifyContent","color","size"],"sourceRoot":""}