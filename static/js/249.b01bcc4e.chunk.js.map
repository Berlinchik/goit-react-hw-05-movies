{"version":3,"file":"static/js/249.b01bcc4e.chunk.js","mappings":"mTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAChB,oBAAqB,CACxBE,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IACRC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IARiB,cACzBC,EADyB,yBASxBA,GATwB,2CAAH,qDAYjBC,EAAe,SAAAC,GAC1B,OAAOd,EAAAA,EAAAA,IAAA,iBACUc,GAAW,CACxBZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,IACZ,GACJ,EAEYU,EAAO,mCAAG,WAAMF,GAAN,uFACEd,EAAAA,EAAAA,IAAA,iBACNc,EADM,YACa,CAChCZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKW,IACjB,IACAV,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAXO,cACfC,EADe,yBAYdA,GAZc,2CAAH,sDAePM,EAAU,mCAAG,WAAMJ,GAAN,uFACDd,EAAAA,EAAAA,IAAA,iBACNc,EADM,YACa,CAChCZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKa,OACjB,IACAZ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAXU,cAClBC,EADkB,yBAYjBA,GAZiB,2CAAH,sDAeVQ,EAAiB,SAAAC,GAC5B,OAAOrB,EAAAA,EAAAA,IAAA,gBACiB,CACpBE,OAAQ,CACNC,QAASJ,EACTuB,MAAOD,EACPN,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,IACZ,GACJ,C,sKCtEYiB,EAAQC,EAAAA,GAAAA,GAAH,4CAILC,EAAYD,EAAAA,GAAAA,EAAH,4CAITE,EAAOF,EAAAA,GAAAA,GAAH,qG,mBCcjB,EArBiB,SAAC,GAAiC,IAA/BG,EAA8B,EAA9BA,UAAWN,EAAmB,EAAnBA,KAAMO,EAAa,EAAbA,OACnC,OACE,UAACF,EAAD,YACE,0BACE,gBACEG,IAAKD,EAAM,yCAAqCA,GAAWE,EAC3DC,IAAKV,EACLW,MAAM,WAGV,4BACE,SAACT,EAAD,UAAQF,KACR,UAACI,EAAD,YACE,sCADF,KACoB,kBACjBE,UAKV,ECjBc,SAASM,IACtB,IAAQnB,GAAYoB,EAAAA,EAAAA,MAAZpB,QACR,GAAwBqB,EAAAA,EAAAA,UAAS,MAAjC,eAAOlB,EAAP,KAAamB,EAAb,KAaA,IAXAC,EAAAA,EAAAA,YAAU,WACR,KACE,iBAAC,qGACwBrB,EAAAA,EAAAA,IAAQF,GADhC,OACOF,EADP,OAECwB,EAAQxB,GAFT,0CAAD,EAMD,CAFC,MAAOJ,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACG,IAECG,EAEL,OACE,8BACE,wBACGA,EAAKqB,KAAI,gBAAGC,EAAH,EAAGA,UAAWZ,EAAd,EAAcA,UAAWN,EAAzB,EAAyBA,KAAMmB,EAA/B,EAA+BA,aAA/B,OACR,SAAC,EAAD,CAEEb,UAAWA,EACXN,KAAMA,EACNO,OAAQY,GAHHD,EAFC,OAWjB,C","sources":["api.js","components/Cast/Cast.styled.jsx","components/Cast/CastItem.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a19b19d31f769a9a934606f8f3dc5bbb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios\n    .get('/trending/all/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data)\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getMovieById = movieId => {\n  return axios\n    .get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data;\n    });\n};\n\nexport const getCast = async movieId => {\n  const response = await axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data.cast;\n    })\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios\n    .get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data.results;\n    })\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getMovieByName = name => {\n  return axios\n    .get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: name,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data;\n    });\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  font-size: 28px;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 24px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  display: flex;\n  gap: 16px;\n  margin-bottom: 16px;\n`;\n","import { Item, Title, Paragraph } from './Cast.styled';\nimport img from '../../img/default_image.jpeg';\n\nconst CastItem = ({ character, name, imgURL }) => {\n  return (\n    <Item>\n      <div>\n        <img\n          src={imgURL ? `https://image.tmdb.org/t/p/w200${imgURL}` : img}\n          alt={name}\n          width=\"200\"\n        />\n      </div>\n      <div>\n        <Title>{name}</Title>\n        <Paragraph>\n          <b>Character:</b> <br />\n          {character}\n        </Paragraph>\n      </div>\n    </Item>\n  );\n};\n\nexport default CastItem;\n","import { useState, useEffect } from 'react';\nimport { getCast } from '../../api';\nimport { useParams } from 'react-router-dom';\nimport CastItem from './CastItem';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    try {\n      (async () => {\n        const response = await getCast(movieId);\n        setCast(response);\n      })();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  if (!cast) return;\n\n  return (\n    <section>\n      <ul>\n        {cast.map(({ credit_id, character, name, profile_path }) => (\n          <CastItem\n            key={credit_id}\n            character={character}\n            name={name}\n            imgURL={profile_path}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovies","params","api_key","then","res","data","catch","error","console","log","message","response","getMovieById","movieId","language","getCast","cast","getReviews","results","getMovieByName","name","query","Title","styled","Paragraph","Item","character","imgURL","src","img","alt","width","Cast","useParams","useState","setCast","useEffect","map","credit_id","profile_path"],"sourceRoot":""}