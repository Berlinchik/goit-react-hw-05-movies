{"version":3,"file":"static/js/387.26e90461.chunk.js","mappings":"mTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAChB,oBAAqB,CACxBE,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IACRC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IARiB,cACzBC,EADyB,yBASxBA,GATwB,2CAAH,qDAYjBC,EAAe,SAAAC,GAC1B,OAAOd,EAAAA,EAAAA,IAAA,iBACUc,GAAW,CACxBZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,IACZ,GACJ,EAEYU,EAAO,mCAAG,WAAMF,GAAN,uFACEd,EAAAA,EAAAA,IAAA,iBACNc,EADM,YACa,CAChCZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKW,IACjB,IACAV,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAXO,cACfC,EADe,yBAYdA,GAZc,2CAAH,sDAePM,EAAU,mCAAG,WAAMJ,GAAN,uFACDd,EAAAA,EAAAA,IAAA,iBACNc,EADM,YACa,CAChCZ,OAAQ,CACNC,QAASJ,EACTgB,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKa,OACjB,IACAZ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IAXU,cAClBC,EADkB,yBAYjBA,GAZiB,2CAAH,sDAeVQ,EAAiB,SAAAC,GAC5B,OAAOrB,EAAAA,EAAAA,IAAA,gBACiB,CACpBE,OAAQ,CACNC,QAASJ,EACTuB,MAAOD,EACPN,SAAU,WAGbX,MAAK,SAAAC,GACJ,OAAOA,EAAIC,IACZ,GACJ,C,+HCtEYiB,EAAOC,EAAAA,GAAAA,GAAH,gIAQJC,EAAQD,EAAAA,GAAAA,GAAH,4CAILE,EAAUF,EAAAA,GAAAA,EAAH,4C,mBCqBpB,EA9BgB,WACd,IAAQV,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAA8Bc,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,IARAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAWJ,GACRV,MAAK,SAAAC,GACJyB,EAAWzB,EACZ,IACAE,OAAM,SAAAyB,GAAG,OAAIvB,QAAQC,IAAIsB,EAAhB,GACb,GAAE,CAAClB,IAECe,EAEL,OAAOA,EAAQI,OAAS,GACtB,wBACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACd,EAAD,YACE,SAACE,EAAD,UAAQU,KACR,SAACT,EAAD,UAAUU,MAFDC,EADA,OAQf,gBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,UACE,SAACf,EAAD,wDAGL,C","sources":["api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a19b19d31f769a9a934606f8f3dc5bbb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios\n    .get('/trending/all/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data)\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getMovieById = movieId => {\n  return axios\n    .get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data;\n    });\n};\n\nexport const getCast = async movieId => {\n  const response = await axios\n    .get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data.cast;\n    })\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios\n    .get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data.results;\n    })\n    .catch(error => console.log(error.message));\n  return response;\n};\n\nexport const getMovieByName = name => {\n  return axios\n    .get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: name,\n        language: 'en-US',\n      },\n    })\n    .then(res => {\n      return res.data;\n    });\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 28px;\n`;\n\nexport const Content = styled.p`\n  font-size: 24px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Item, Title, Content } from './Reviews.styled';\nimport { getReviews } from '../../api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(res => {\n        setReviews(res);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  if (!reviews) return;\n\n  return reviews.length > 0 ? (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <Item key={id}>\n          <Title>{author}</Title>\n          <Content>{content}</Content>\n        </Item>\n      ))}\n    </ul>\n  ) : (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <Title>We don't have any reviews for this movie</Title>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","getTrendingMovies","params","api_key","then","res","data","catch","error","console","log","message","response","getMovieById","movieId","language","getCast","cast","getReviews","results","getMovieByName","name","query","Item","styled","Title","Content","useParams","useState","reviews","setReviews","useEffect","err","length","map","author","content","id","style","display","justifyContent"],"sourceRoot":""}